import numpy as np

#넘파이에선 float32나 float64타입의 숫자가 스칼라텐서(배열스칼라-수정할수없는 0차원의 넘파이배열.)
#ndim속성 사용시 넘파이 배열의 축 개수 확인가능, 스칼라 텐서의 축 개수는 0(ndim == 0)
#ndim은 몇차원 텐서인지 보여줌(n-dimension)
#텐서의 축 개수를 랭크(rank)라고도 함

#스칼라(0D 텐서)
x = np.array(12)
print(x)
print(x.ndim)

#벡터(1D 텐서)-숫자의 배열
y = np.array([12, 3, 6, 14, 7])
#이 벡터는 5개의 원소를 가지므로 5차원 벡터라 함. 5D벡터와 5D텐서를 혼동하면 안됨.
#5D벡터는 하나의 축을 따라 5개의 차원을 가진것,
#5D텐서는 5개의 축을 가진 것(텐서의 각 축을 따라 여러개의 차원을 가진 벡터가 놓일 수 있음)
print(y)
print(y.ndim)

#행렬(2D 텐서)-벡터의 배열
#행렬엔 2개의 툭이 있음(행과 열)
z = np.array([[5, 78, 2, 34, 0],
              [6, 79, 3, 35, 1],
              [7, 80, 4, 36, 2]])
#첫번째 축에 있는 원소를 '행'이라 함
#두번째 축에 있는 원소를 '열'이라 함
#앞의 예에서는 x의 첫 번째 행은 [5, 78, 2, 34, 0],첫번쨰 열은 [5, 6, 7]이다.
print(z)
print(z.ndim)

#3D 텐서와 고차원 텐서(직육면체 형태)
a = np.array([[[5, 78, 2, 34, 0],
              [6, 79, 3, 35, 1],
              [7, 80, 4, 36, 2]],
             [[5, 78, 2, 34, 0],
               [6, 79, 3, 35, 1],
               [7, 80, 4, 36, 2]],
             [[5, 78, 2, 34, 0],
              [6, 79, 3, 35, 1],
              [7, 80, 4, 36, 2]]])
print(a)
print(a.ndim)

'''
텐서의 3개 핵심 속성

축의 개수(랭크): 3D 텐서엔 3개의 축이 있고, 행렬엔 2개의 축이 있음. 이는 ndim속성에 저장되어 있음
크기(shape): 텐서의 각 축을 따라 얼마나 많은 차원이 있는지를 나타낸 파이썬의 튜플(tuple).
            위 행렬의 크기는 (3, 5)이고, 3D텐서의 크기는 (3, 3, 5)이다.
            벡터의 크기는 (5,)처럼 1개의 원소로 이루어진 튜플.
            배열 스칼라는 ()처럼 크기가 없음
데이터타입(dtype): 텐서에 포함된 데이터의 타입. 텐서의 타입은 float32, uint8, float64등이 될수있음.
                가변길이의 문자열 사용x, char타입 드물게 사용.
'''

